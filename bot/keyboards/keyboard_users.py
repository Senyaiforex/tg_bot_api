from aiogram.types import (ReplyKeyboardMarkup, KeyboardButton,
                           InlineKeyboardButton, InlineKeyboardMarkup)
from utils.bot_utils.text_static import catalog_list, channels

group_url = 'https://t.me/Buyer_Marketplace'
manager_tg = 'https://t.me/Broker_113'


async def start_reply_keyboard():
    menu = [KeyboardButton(text="–ú–µ–Ω—é")]
    keyboard = ReplyKeyboardMarkup(keyboard=[
            menu
    ], resize_keyboard=True, is_persistent=True, one_time_keyboard=False)
    return keyboard


async def start_keyboard():
    start_but = [InlineKeyboardButton(text='–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', url=group_url)]
    keyboard = InlineKeyboardMarkup(inline_keyboard=[start_but])
    return keyboard


async def menu_keyboard():
    """
    –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞—ë—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –º–µ–Ω—é
    :return: InlineKeyboardMarkup
    """
    add_post = [InlineKeyboardButton(text='üì• –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –ø–æ—Å—Ç –≤ –≥—Ä—É–ø–ø–µ',
                                     callback_data='public')]
    all_posts = [InlineKeyboardButton(text='üìã–ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è', callback_data='all_posts')]
    catalog = [InlineKeyboardButton(text='üìÇ –ö–∞—Ç–∞–ª–æ–≥ —Å —Ç–æ–≤–∞—Ä–æ–º',
                                    callback_data='catalog')]
    search_prod = [InlineKeyboardButton(text='üîç–õ–∏—Å—Ç –æ–∂–∏–¥–∞–Ω–∏—è', callback_data='products_search')]
    delete_post_by_name = [InlineKeyboardButton(text='üóë–£–¥–∞–ª–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Å –º–æ–∏–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º',
                                                callback_data='delete_post_by_name')]
    group = [InlineKeyboardButton(text='üë• –ì—Ä—É–ø–ø–∞', url=group_url)]
    keyboard = InlineKeyboardMarkup(inline_keyboard=[add_post, all_posts, catalog,
                                                     search_prod, group, delete_post_by_name])
    return keyboard


async def catalog_keyboard():
    """
    –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞—ë—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞ —Å —Ç–æ–≤–∞—Ä–∞–º–∏
    :return: InlineKeyboardMarkup
    """
    keyboard = InlineKeyboardMarkup(
            inline_keyboard=[[InlineKeyboardButton(text=elem[0],
                                                   url=elem[1])] for elem in catalog_list])
    keyboard.inline_keyboard.append(
            [InlineKeyboardButton(text='‚¨ÖÔ∏è –í –º–µ–Ω—é', callback_data='back_to_menu')]

    )
    return keyboard


async def public_keyboard():
    """
    –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞—ë—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –ø–æ—Å—Ç–æ–≤ –≤ –≥—Ä—É–ø–ø–µ
    :return: InlineKeyboardMarkup
    """
    free_post = [InlineKeyboardButton(text='–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –ø–æ—Å—Ç –±–µ—Å–ø–ª–∞—Ç–Ω–æ',
                                      callback_data='add_post_free')]
    coins_post = [InlineKeyboardButton(text='–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –ø–æ—Å—Ç –∑–∞ –º–æ–Ω–µ—Ç—ã - 10 000 –º–æ–Ω–µ—Ç',
                                       callback_data='add_post_coins')]
    # tokens_post = [InlineKeyboardButton(text='–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –ø–æ—Å—Ç –∑–∞ —Ç–æ–∫–µ–Ω—ã',
    #                                     callback_data='add_post_tokens')]
    rub_post = [InlineKeyboardButton(text='–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –ø–æ—Å—Ç –∑–∞ —Ä—É–±–ª–∏',
                                     callback_data='add_post_money')]
    help_but = [InlineKeyboardButton(text='–ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É', url=manager_tg)]
    back_but = [InlineKeyboardButton(text='‚¨ÖÔ∏è –í –º–µ–Ω—é', callback_data='back_to_menu')]
    keyboard_inline = [
            free_post,
            coins_post,
            # tokens_post,
            rub_post,
            help_but,
            back_but
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=keyboard_inline)
    return keyboard


async def marketpalce_choice():
    wb = [KeyboardButton(text="WB")]
    ozon = [KeyboardButton(text="OZON")]
    keyboard = ReplyKeyboardMarkup(keyboard=[
            wb,
            ozon,
    ], resize_keyboard=True)
    return keyboard


async def channel_choice():
    keyboard = InlineKeyboardMarkup(
            inline_keyboard=[[InlineKeyboardButton(text=value,
                                                   callback_data=f'channel:{key}')] for key, value in
                             channels.items()])
    return keyboard


async def finish_public():
    public = [InlineKeyboardButton(text='–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', callback_data='finish_public')]
    menu = [InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ', callback_data='public')]
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
            public,
            menu
    ])
    return keyboard


async def url_post_keyboard(url):
    button = [InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä',
                                   url=url)]
    return InlineKeyboardMarkup(inline_keyboard=[button])


async def search_keyboard():
    list_search = [InlineKeyboardButton(text='üìã–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ª–∏—Å—Ç–µ –æ–∂–∏–¥–∞–Ω–∏—è',
                                        callback_data='list_search')]
    add_product = [InlineKeyboardButton(text='‚ûï–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –ª–∏—Å—Ç –æ–∂–∏–¥–∞–Ω–∏—è', callback_data='search')]
    back_menu = [InlineKeyboardButton(text='–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é',
                                            callback_data=f'back_to_menu')]
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
            list_search,
            add_product,
            back_menu
    ])
    return keyboard


async def delete_search_keyboard(id_search):
    button = [InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å', callback_data=f'del_search_{id_search}')]
    search_menu = [InlineKeyboardButton(text='–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é',
                                            callback_data=f'back_to_menu')]
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
            button,
            search_menu
    ])
    return keyboard


async def post_keyboard(post_id, active: bool) -> InlineKeyboardMarkup:
    post_deactivate = [InlineKeyboardButton(text='–°–Ω—è—Ç—å —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏',
                                            callback_data=f'my-post_deactivate_{post_id}')]
    post_public = [InlineKeyboardButton(text='–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', callback_data=f'public_again_{post_id}')]
    post_delete = [InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç –Ω–∞–≤—Å–µ–≥–¥–∞',
                                        callback_data=f'my-post_delete_{post_id}')]
    if active:
        buttons = [post_deactivate, post_delete]
    else:
        buttons = [post_public, post_delete]
    post_menu = [InlineKeyboardButton(text='–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é',
                                            callback_data=f'back_to_menu')]
    buttons.append(post_menu)
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


async def my_post_public_keyboard(id_post: int):
    """
    –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞—ë—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –ø–æ—Å—Ç–æ–≤ –≤ –≥—Ä—É–ø–ø–µ
    :return: InlineKeyboardMarkup
    """
    free_post = [InlineKeyboardButton(text='–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ',
                                      callback_data=f'again_free_{id_post}')]
    coins_post = [InlineKeyboardButton(text='–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∑–∞ –º–æ–Ω–µ—Ç—ã 10 000 –º–æ–Ω–µ—Ç',
                                       callback_data=f'again_coins_{id_post}')]
    # tokens_post = [InlineKeyboardButton(text='–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –ø–æ—Å—Ç –∑–∞ —Ç–æ–∫–µ–Ω—ã',
    #                                     callback_data='add_post_tokens')]
    rub_post = [InlineKeyboardButton(text='–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∑–∞ —Ä—É–±–ª–∏',
                                     callback_data=f'again_money_{id_post}')]
    back_but = [InlineKeyboardButton(text='‚¨ÖÔ∏è –í –º–µ–Ω—é', callback_data='back_to_menu')]
    keyboard_inline = [
            free_post,
            coins_post,
            # tokens_post,
            rub_post,
            back_but
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=keyboard_inline)
    return keyboard


async def username_keyboard(username: str) -> ReplyKeyboardMarkup:
    back_button = [KeyboardButton(text="–í –º–µ–Ω—é")]
    name_insert_button = [KeyboardButton(text=username)]
    keyboard = ReplyKeyboardMarkup(keyboard=[
            name_insert_button,
            back_button
    ], resize_keyboard=True, is_persistent=True, one_time_keyboard=False)
    return keyboard


async def search_keyboard_delete() -> InlineKeyboardMarkup:
    menu_button = [InlineKeyboardButton(text="–í –º–µ–Ω—é", callback_data="back_to_menu")]
    back_button = [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="products_search")]
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
            back_button,
            menu_button
    ])
    return keyboard


async def delete_message_keyboard(id_message):
    button_delete = [InlineKeyboardButton(text="–î–∞", callback_data=f"message_del_{id_message}")]
    menu_button = [InlineKeyboardButton(text="–í –º–µ–Ω—é", callback_data="back_to_menu")]
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
            button_delete,
            menu_button
    ])
    return keyboard


menu_button = [InlineKeyboardButton(text="–í –º–µ–Ω—é", callback_data="back_to_menu")]
back_menu_user = InlineKeyboardMarkup(inline_keyboard=[
        menu_button
])
