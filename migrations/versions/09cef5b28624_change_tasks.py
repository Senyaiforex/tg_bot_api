"""change_tasks

Revision ID: 09cef5b28624
Revises: e89c86948774
Create Date: 2024-10-24 22:52:02.348428

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "09cef5b28624"
down_revision: Union[str, None] = "e89c86948774"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "tasks",
        sa.Column("active", sa.Boolean(), nullable=True, comment="Активность"),
    )
    op.drop_constraint(
        "users_tasks_user_id_fkey", "users_tasks", type_="foreignkey"
    )
    op.drop_constraint(
        "users_tasks_task_id_fkey", "users_tasks", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "users_tasks", "users", ["user_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "users_tasks", "tasks", ["task_id"], ["id"], ondelete="CASCADE"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "users_tasks", type_="foreignkey")
    op.drop_constraint(None, "users_tasks", type_="foreignkey")
    op.create_foreign_key(
        "users_tasks_task_id_fkey", "users_tasks", "tasks", ["task_id"], ["id"]
    )
    op.create_foreign_key(
        "users_tasks_user_id_fkey", "users_tasks", "users", ["user_id"], ["id"]
    )
    op.drop_column("tasks", "active")
    # ### end Alembic commands ###
